version: '3.7'
services:
  mysql:
    container_name: cdc-mysql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_USER: django
      MYSQL_PASSWORD: django
      MYSQL_DATABASE: djangodb
  python_app:
    container_name: cdc-python_app
    build: ./django-mysql/
    command: ["./wait-for-it.sh", "mysql:3306", "-t", "300", "--", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    volumes:
      - ./django-mysql/src:/app
    ports:
      - "8000:8000"
    depends_on:
      - mysql
  adminer:
    container_name: cdc-adminer
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DEFAULT_DB_NAME: djangodb
    ports:
      - 8080:8080
  zookeeper:
    container_name: cdc-zookeeper
    image: debezium/zookeeper:1.6
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
  kafka:
    container_name: cdc-kafka
    image: debezium/kafka:1.6
    ports:
      - 9092:9092
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
      BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - zookeeper
  kafka-connect:
    container_name: cdc-kafka-connect
    image: debezium/connect:1.6
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      STATUS_STORAGE_TOPIC: my_connect_statuses
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      CONFIG_STORAGE_TOPIC: my_connect_configs
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - zookeeper
      - mysql
  kafdrop:
    container_name: cdc-kafdrop
    image: obsidiandynamics/kafdrop:3.27.0
    volumes:
      - ./proto:/var/protobuf_desc
    command: /kafdrop.sh --message.format=PROTOBUF --protobufdesc.directory=/var/protobuf_desc
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    ports:
      - 9000:9000
    depends_on:
      - kafka
      - zookeeper
